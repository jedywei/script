JSONPath            JSONPath is a query language for JSON. 

JSONPath notation
A JSONPath expression sepcifies a path to an element (or a set of elements) in a JSON structue.  
Path can use the dot notation:

$.store.book[0].title

or the bracket notation

$['store']['book'][0]['title']

The leading $ represents the root object or array and can be OMMITED. For example, 
$.foo.bar and foo.bar are the same, and so are $[0].status and [0].status

Other syntax elements are described below.

Expression                      Description
$                               The root object or array
.<property>                     Selects the specified property in a parent object.
['<property>']                  Selects the specified property in a parent object. Be surt to put 
                                single quotes around the property name. 
                                TIP: Use this notation if the property name contains special
                                characters such as spaces, or begins with a character other than 
                                A..Za..z_.
[n]                             Selects n-th element from an array. Indexs are 0-based.
[n1,n2,...]                     Selects the n-th elemnt from an array. Indexes are 0-based.
..<property>                    Recursive descent: Searches for the specified property name
                                recursively and returns an array of all values with this property
                                name. Always returns a list, event if just one proerty is found. 
*                               Wildcard selects all elements in an object or an array, 
                                regardless of their names or indexes. For example, 
                                address.* means all properties of the address object, and
                                book[*] means all itmes of the book array.
[start:end]                     Selects array elements from the start index an up to, but not
[start:]                        including, end index. If end is omitted, selects all elements from 
                                start until the end of the array. Returns a list.
[:n]                            Selects the first n elements of the array. Returns a list.
[-n:]                           Selects the last n elements of the array. Return a list.
[?(<expression>)]               Filter expression. Selects all elements in an object or array
                                that match the specified filter. Return a list.
[(<expression>)]                Script expression can be used instead of explicit property name
                                or indexes. An example is [(@.lenght-1)] which selects the last
                                item in an array. Here, length refers to the length of the current
                                array rather than a JSON field named length. 
@                               Use in filter expressions to refer to the current node being processed.


Filters

$.store.book[?(@.price < 10)]

$.store.book[?(@.price < $.expensive)]

$[?(@.isbn)]                    # matches all items that have this property (isbn), regrdless of the value. 


Operator                        Description
==                              Equals to. String values must be enclosed in single quotes (not double quotes):
                                [?(@.color == 'red')].
                                Note: Number to string comparison. 1 equals '1'. 

!=                              Not equal to. String values must be enclosed in single quotes:
                                [?(@.color != 'red')].

>                               Greater than. 
>=                              Greater than or equal to.
<                               Less than.
<=                              Less than or equal to.
=~                              Mathes a JavaScript regular expression. For example,
                                [?(@.description=~/cat.*/i)] matches items whose description starts with 
                                cat (case-insensitive)
!                               Negate a filter, for example
                                [?(!@.isbn)] matches items that do not have the isbn property
&&                              Logical AND
                                [?(@.category == 'fiction' && @.price < 10)]
||                              Logical OR
                                [?(@.category == 'fiction' || @.price < 10)]
in                              Checks if the left-sie value is present in the right-shde list. 
                                [?(@.size in ['M', 'L'])]
                                [?('S' in @.sizes)]
nin                             Opposite of in. 
subsetof                        Checks if the left-side array is a subset of the right-side array. The
                                actual order of array items does not matter. String comparsion is 
                                case-sensitive. An empty left-side array always matches.
                                [?(@.sizes subset of ['M', 'L'])] - matches if sizes is ['M'], ['L'] or ['L', 'M']
                                [?(['M', 'L'] subset of @.sizes)] - matches if sizes contains at least 'M' an 'L'
contains                        Check if a string contains the specified substring (case-sensitive), or an
                                array contains the specified element. 
                                [?(@.name contains 'Alex')]
                                [?(@.numbers contains 7)]
                                [?('ABCDEF' contains @.character)]
size                            Checks if an array or string has the specified length.
                                [?(@.name size 4)]
empty true                      Matches an empty array or string. 
                                [?(@.name empty true)]
empty false                     Matches an non-empty array or string. 
                                [?(@.name empty false)]
                        

----------------------------------------------------------------------------------------------
XPath               XPath uses path expression to select nodes or node-sets in an XML document. 
                    The node is selected by following a pth or steps.


XPath               JSONPath                Descritpion
nodename            <property>              a property of JSON object
/                   $                       the root JSON node
.                   @                       the current JSON node
..                  n/a                     the parent of the current JSON node
/                   . or []                 child operator
//                  ..                      recursive descent (depth-first search)
*                   *                       wildcard (all elements of a JSON array; all values of a 
                                            JSON object; otherwise none)
[]                  []                      subscript operator
|                   [,]                     union operator (for two or more subscript operators)
n/a                 [start:end:step]        slice operator (subset of elements of a JSON array)
[]                  ?()                     filter expression (for use with subscript operator)


see also json, jsonpath, jq

References
JSONPath Syntax -> https://support.smartbear.com/alertsite/docs/monitors/api/endpoint/jsonpath.html

