sed - stream editor for filtering and transforming text 

Syntax
sed SCRIPT INPUTFILE...
sed 's/hello/world/' input.txt > output.txt
sed '{[/]<n>[<string>|<regex>[/]}d' <filename>
sed '{[/]<adr1>[,<adr2>][/]d' <filename>

/.../ = delimiters
n = line number
string = string found in line
regex = regular expression corresponding to the searched pattern
add = address of a line (number of pattern)
d = delete

sed                     (BRE)
sed -E                  (ERE)

Example of sed

sed '3d' filename.txt
sed '/awk/d' filename.txt
sed '$d' filename.txt                   // remove the last line
sed '/^$/d' filename.txt                // remove empty line
sed '/./!' filename.txt                 // same as above
sed '7,9d' filename.txt                 // remove lines 7 ~ 9
sed -n 22,29p testfile.txt              // print only line lines from 22 to 29
sed 's/danger/safety/g' test.txt
sed 's/danger/safety/2' test.txt
sed 's/danger/safety/2g' test.txt
sed '4,9 s/danger/safety/' test.txt
sed -e 's/.*/testing sed &/' test.txt
sed -e 's/#.*//;/^$/d' test.txt         // remove all commented line and all empty lines
sed -E 's/([^:]*).*/\1/' /etc/passwd


10 sed commands
textfile.txt == 
1 This is a demo text file.
2 It is an amazing file that will help us all.
3 The sed command is also great for stream editing.
4 Want to learn how to use the command?
5 This is another line in the file.
6 This is the third general line in the file.
7 This file is named as textfile.
8 This is a apple.
9 This is a orange.
===

sed -n '3,5p' textfile.txt                  // view a range of lines, -n option == --quiet
sed -n '3,5d' textfile.txt                  // delete 3~5 lines
sed -n -e '1,2p' -e '5,6p' textfile.txt     // 1~2 and 3~6
sed G textfile.txt                          // insert empty lines 
sed s/originalword/replaceword/g textfile.txt
sed s/amazing/super/g2 textfile.txt         // replace the second occurence of the word
sed s/Amazing/super/gi textfile.txt         // ignore case
sed '2,5s/amazing/super/g' textfile.txt
sed 's/amazing/super/g;s/command/utility/gi' textfile.txt





readelf -d `which ld` | grep libbfd | sed -e 's/.*\[\(.*\)\].*/\1/'

ldd $(which gcc) | grep -e 'ld.*\.so' | awk '{ print $1 }'

@see also   awk, regex, grep, bash_pipe
