
// string is JS primitive type
// String is an Object

const string1 = "A string primitive";
const string2 = 'Also a string primitive';
const string3 = `Yet another string primitive`;

const string4 = new String('A String object');

'cat'.charAt(1);        // 'a'
"cat"[1];               // "a"

const a = 'a';
const b = 'b';
if (a < b) {
    // true
} else if (a > b) {
} else {
}




String(x)         // returns a string from a number variable x
String(123)       // returns a string from a number literal 123
String(100 + 23)  // returns a string from a number from an expression

x.toString()
(123).toString()
(100 + 23).toString()

String(false)      // returns "false"
String(true)       // returns "true"
false.toString()   // returns "false"
true.toString()    // returns "true"


5 + null    // returns 5         because null is converted to 0
"5" + null  // returns "5null"   because null is converted to "null"
"5" + 2     // returns "52"      because 2 is converted to "2"
"5" - 2     // returns 3         because "5" is converted to 5
"5" * "2"   // returns 10        because "5" and "2" are converted to 5 and 2


Template literals
`string text`
`string text line 1
 string text line 2`

`string text ${expression} string text`

