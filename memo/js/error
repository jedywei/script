Errors

    - Error
    - EvalError             / an error has occurred in the eval() function
    - SyntaxError           / 
    - RangeError            / a number "out of range" has occurred
    - ReferenceError        / an illegal reference has occurred
    - TypeError             / a type error has occurred
    - URIError              / an error in encodeURI() has occurred


    
err.name
err.message 
// err.fileName and err.lineNumber only Firefox for Android supported

    - Customize Error
    class NotReadyError extends Error {
    constructor(message) {
        super(message);
        this.message = message;
        this.name = "NotReadyError";
    }



Example 1 -------------------------------------------------

// Throws with a ReferenceError because z is not defined.
try {
  const m = 1;
  const n = m + z;
} catch (err) {
  // Handle the error here.
}

Example 2 -------------------------------------------------

const fs = require('node:fs');
fs.readFile('a file that does not exist', (err, data) => {
  if (err) {
    console.error('There was an error reading the file!', err);
    return;
  }
  // Otherwise handle the data
});


Example 3 ------------------------------------------------

const net = require('node:net');
const connection = net.connect('localhost');

// Adding an 'error' event handler to a stream:
connection.on('error', (err) => {
  // If the connection is reset by the server, or if it can't
  // connect at all, or on any sort of error encountered by
  // the connection, the error will be sent here.
  console.error(err);
});

connection.pipe(process.stdout);

Example 4 ------------------------------------------------

const EventEmitter = require('node:events');
const ee = new EventEmitter();

setImmediate(() => {
  // This will crash the process because no 'error' event
  // handler has been added.
  ee.emit('error', new Error('This will crash'));
});

