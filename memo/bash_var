bash varaiables
---------------
Summary

$1,$2,...           The first, second, etc command line arguments to the script
var=value           To st a value for a variable 'var'. Remember, no spaces on either side of =
Quotes "'           Double will do variable substitution, single will not.
var=$(command)      Save the output of a command into a variable 'var'.
export var1         Make the variable var1 available to child processes.


[command line arguments]
------------------
#!/bin/bash
# A simple copy script

cp $1 $2

# let's verify the copy worked

echo Details for $2
ls -lh $2
------------------

[Other Special Variables]
$0              - The name of the bash script
$1 - $9         - The first 9 arugments to the Bash script. 
$#              - How many arguments were passed to the Bash script.
$@              - All the arguments supplied to the Bash script.
$?              - The exit status of the most recently run process
$$              - The process ID of the current script
$USER           - The username of the user running the script. 
$HOSTNAME       - The hostname of the machine the script is running on.
$SECONDS        - The number of seconds time since script was starte. 
$RANDOM         - Return a different random number each time is it referred to.
$LINENO         - Returns the current line number in the Bash script.

[Setting our own variables]
var=value       # no space allowed between '='
-------------
myvar=Hello
avar=Fred

echo $myvar $avar
echo 
sampledir=/etc

ls $sampledir
-------------

[Quotes]
myvar='Hello World'
newvar="More $myvar"
newvar='More $myvar'

[Command Subsititution]
myvar=$(ls /etc | wc -l)

[Exporting Variables]
var1=blah
var2=foo
export var1     # make var1 available to child processes


