rebase
------

git rebase



interactive rebase
-------------------
$ git rebase -i
$ git rebase -i <commit> 

p, pick             = use commit
r, reword           = use commit, but edit the commit message
e, edit             = use commit, but stop for amending
s, squash           = use commit, but meld into previous commit (^)
f, fixup            = like "squash" but keep only the previous commit's log message
x, exec <command>   = run command
b, break            = stop here (continue rebase later with 'git rebase --continue')
d, drop             = remove commit
l, label <label>    = label current HEAD with a name
t, reset <label>    = reset HEAD to a label
m, merge


modify the rebase file
:w
:q

reset HEAD to a commit
-----------------------
git reset --soft <commit hash>          // keep modified
git reset --hard <commit hash>          // move HEAD to <commit hash> and don't keep any file
                                        // after reset --hard, i can use 'git pull' to get the update from remote server 


